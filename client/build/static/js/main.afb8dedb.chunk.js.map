{"version":3,"sources":["assets/images lazy /^/.*$/ groupOptions: {} namespace object","components/Footer/index.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Success.js","utils/auth.js","assets/logo.png","components/Nav/index.js","utils/queries.js","components/Header/index.js","utils/helpers.js","assets/spinner.gif","utils/actions.js","pages/Profile.js","utils/mutations.js","pages/Signup.js","pages/Login.js","components/SkillMenu/index.js","components/JobItem/index.js","components/JobList/index.js","pages/Home.js","pages/About.js","utils/reducers.js","utils/store.js","pages/JobDetail.js","App.js","reportWebVitals.js","index.js","assets/images/employeeproduct.jpg","assets/images/_a67_cQQD-pexels-andrea-piacquadio-818819.jpg"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","Footer","className","to","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","role","aria-label","Success","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Nav","Auth","loggedIn","src","bannerLogo","alt","data-icon","getProfile","data","firstName","onClick","logout","QUERY_SKILLS","gql","QUERY_ME_BASIC","QUERY_USER","QUERY_JOBS_BY_SKILL","QUERY_IMAGE","QUERY_PRODUCT","Header","prop","image","upload","lastName","_id","email","skill","backgroundImage","color","data-typed-person","idbPromise","storeName","method","object","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","getAll","delete","oncomplete","close","UPDATE_JOBS","UPDATE_CURRENT_JOB","UPDATE_SKILLS","UPDATE_CURRENT_SKILL","UPDATE_OFFERS","UPDATE_CURRENT_USER","ADD_TO_CART","REMOVE_FROM_CART","CLEAR_CART","TOGGLE_CART","UPDATE_PRODUCT","UPDATE_CART_QUANTITY","UPDATE_IMAGE","Profile","useDispatch","state","useSelector","userParam","offers","product","cart","useParams","useState","productData","useQuery","currentupload","setCurrentupload","variables","userData","loading","user","me","useEffect","path","split","imageforspot","margin","userImage","profileText","LOGIN","ADD_USER","UPLOAD_MUTATION","Signup","props","dispatch","password","formState","setFormState","useMutation","addUser","file","setFile","refetchQueries","query","uploadFile","mutationData","handleUpload","event","a","preventDefault","useDropzone","accept","onDrop","acceptedFile","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","length","name","revokeObjectURL","skills","skillData","type","handleFormSubmit","mutationResponse","login","handleChange","target","value","imageDisplayed","homeimage","onSubmit","encType","placeholder","onChange","display","paddingBottom","rows","Login","error","SkillMenu","forEach","item","currentSkill","JobItem","job","JobList","jobs","filter","spinner","Home","About","href","action","required","Height","initialState","currentJob","reducers","cuurentUser","currentUser","cartOpen","newState","purchaseQuantity","createStore","JobDetail","setCurrentJob","find","description","httpLink","createUploadLink","uri","client","ApolloClient","operation","setContext","headers","authorization","cache","InMemoryCache","typePolicies","Skills","keyFields","Images","link","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afb8dedb.chunk.js","sourcesContent":["var map = {\n\t\"./6AFHv_ZCc-man.jpg\": [\n\t\t128,\n\t\t4\n\t],\n\t\"./89gJg1Vlg-girl.jpg\": [\n\t\t129,\n\t\t5\n\t],\n\t\"./9t9yUQHLe-girl.jpg\": [\n\t\t130,\n\t\t6\n\t],\n\t\"./MB_37Uzbk-sam.jpg\": [\n\t\t131,\n\t\t7\n\t],\n\t\"./_a67_cQQD-pexels-andrea-piacquadio-818819.jpg\": [\n\t\t73\n\t],\n\t\"./employeeproduct.jpg\": [\n\t\t51\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 120;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <div id=\"footer\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"socials-media text-center\">\n          <ul className=\"list-unstyled\">\n            <li>\n              <Link to=\"/\">\n                <i className=\"ion-social-facebook\"></i>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\">\n                <i className=\"ion-social-twitter\"></i>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\">\n                <i className=\"ion-social-instagram\"></i>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\">\n                <i className=\"ion-social-googleplus\"></i>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\">\n                <i className=\"ion-social-tumblr\"></i>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\">\n                <i className=\"ion-social-dribbble\"></i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n\n        <p>&copy; Copyrights Folio. All rights reserved.</p>\n\n        <div className=\"credits\">\n          <Link to=\"https://bootstrapmade.com/\">BootstrapMade</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;","import React, { useEffect } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Jumbotron from '../components/Jumbotron';\r\n\r\nfunction Success() {\r\n    // const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n    // useEffect(() => {\r\n    //     async function saveOrder() {\r\n    //         const cart = await idbPromise('cart', 'get');\r\n    //         const products = cart.map(item => item._id);\r\n\r\n    //         if (products.length) {\r\n    //             const { data } = await addOrder({ variables: { products } });\r\n    //             const productData = data.addOrder.products;\r\n              \r\n    //             productData.forEach((item) => {\r\n    //               idbPromise('cart', 'delete', item);\r\n    //             });\r\n    //           }\r\n\r\n    //           setTimeout(() => {\r\n    //             window.location.assign('/');\r\n    //           }, 3000);\r\n    //     }\r\n\r\n    //     saveOrder();\r\n    // }, [addOrder]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>Success!</h1>\r\n                <h2>\r\n                    Thank you for your purchase!\r\n          </h2>\r\n                <h2>\r\n                    You will now be redirected to the homepage\r\n          </h2>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Success;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    // console.log(this.getToken());\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export default __webpack_public_path__ + \"static/media/logo.c67af794.png\";","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport bannerLogo from '../../assets/logo.png';\r\nimport '../../index.css';\r\n\r\nfunction Nav() {\r\n\r\n    function showNavigation() {\r\n        if (Auth.loggedIn()) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"logo\">\r\n                            <Link to=\"/\"><img src={bannerLogo} alt=\"logo\" /></Link>\r\n                        </div>\r\n\r\n                        <div className=\"responsive\"><i data-icon=\"m\" className=\"ion-navicon-round\"></i></div>\r\n\r\n                        <ul className=\"nav-menu list-unstyled\">\r\n                            <li><Link to=\"/\" className=\"smoothScroll\">Home</Link></li>\r\n                            <li><Link to=\"/about\" className=\"smoothScroll\">About</Link></li>\r\n                            <li><Link to=\"/profile\" className=\"smoothScroll\">{Auth.getProfile().data.firstName}'s Profile</Link></li>\r\n                            <li><Link to=\"/\" className=\"smoothScroll\" onClick={() => Auth.logout()}>Logout</Link></li>\r\n                            <li><Link to=\"/\" className=\"smoothScroll\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"logo\">\r\n                            <Link to=\"/\"><img src={bannerLogo} alt=\"logo\" /></Link>\r\n                        </div>\r\n\r\n                        <div className=\"responsive\"><i data-icon=\"m\" className=\"ion-navicon-round\"></i></div>\r\n\r\n                        <ul className=\"nav-menu list-unstyled\">\r\n                            <li><Link to=\"/\" className=\"smoothScroll\">Home</Link></li>\r\n                            <li><Link to=\"/about\" className=\"smoothScroll\">About</Link></li>\r\n                            <li><Link to=\"/signup\" className=\"smoothScroll\">Sign Up</Link></li>\r\n                            <li><Link to=\"/login\" className=\"smoothScroll\">Login</Link></li>\r\n                            <li><Link to=\"/\" className=\"smoothScroll\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav id=\"main-nav\">\r\n            {showNavigation()}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const QUERY_SKILLS = gql`\r\n{\r\n  skills {\r\n    _id\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n{\r\n  me {\r\n    _id\r\n    email\r\n    firstName\r\n    lastName\r\n    profileText\r\n  }\r\n}\r\n`;\r\n\r\nexport const QUERY_ME_BASIC = gql`\r\n  {\r\n    me {\r\n      _id\r\n      email\r\n      firstName\r\n      lastName\r\n      profileText\r\n      upload{\r\n        id\r\n        path\r\n      }\r\n      skills {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\nquery user($id:ID!) {\r\n  user(_id: $id) {\r\n    _id\r\n    email\r\n    firstName\r\n    lastName\r\n    profileText\r\n    image \r\n    skills {\r\n      _id\r\n      name\r\n    }\r\n    jobOffers {\r\n      description\r\n      positionFilled\r\n      image\r\n      role\r\n      createdAt\r\n    }\r\n    applied {\r\n      description\r\n      positionFilled\r\n      image\r\n      role\r\n      createdAt\r\n    }\r\n    matchedJobs {\r\n      description\r\n      positionFilled\r\n      image\r\n\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const QUERY_ALL_USERS = gql`\r\n  query getusers($id: ID) {\r\n    users(_id: $ID) {\r\n      _id\r\n    email\r\n    firstName\r\n    lastName\r\n    profileText\r\n    image \r\n    skills {\r\n      _id\r\n      name\r\n    }\r\n    jobOffers {\r\n      description\r\n      positionFilled\r\n      image\r\n      skills {\r\n        _id\r\n        name\r\n      }\r\n      createdAt\r\n    }\r\n    applied {\r\n      description\r\n      positionFilled\r\n      image\r\n      skills {\r\n        _id\r\n        name\r\n      }\r\n      createdAt\r\n    }\r\n    matchedJobs {\r\n      description\r\n      positionFilled\r\n      image\r\n      skills {\r\n        _id\r\n        name\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n    \r\n`;\r\n\r\nexport const QUERY_JOBS_BY_SKILL = gql`\r\n  query getJobs($skills: ID) {\r\n    jobs(skills: $skills) {\r\n      _id\r\n      email\r\n      role\r\n      description\r\n      image\r\n      createdAt\r\n      skills {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_IMAGE = gql`\r\n  {\r\n    images {\r\n      id\r\n      filename\r\n      path\r\n    }\r\n  } \r\n`;\r\n\r\n\r\n\r\nexport const QUERY_ALL_JOBS = gql`\r\n  {\r\n    jobs {\r\n      _id\r\n      email\r\n      description\r\n      role\r\n      image\r\n      createdAt\r\n      skills {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: ID!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_PRODUCT = gql`\r\n{\r\n  product {\r\n    _id\r\n    name\r\n    description\r\n    price\r\n    quantity\r\n  }\r\n}\r\n`;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (prop) => {\r\n  const {image, upload, role, firstName, lastName, _id, email, skill} = prop;\r\n\r\n  return (\r\n    <div id=\"hero\" className=\"home\" style={{backgroundImage: `url(${image})`}}>\r\n\r\n    <div className=\"container\">\r\n      <div className=\"hero-content\">\r\n        <h1 style={{color: 'black'}}>{firstName} {lastName}<span></span></h1>\r\n        <p className=\"typed-items\" data-typed-person={role}>None</p>\r\n\r\n        <ul className=\"list-unstyled list-social\">\r\n          <li><Link to=\"/\"><i className=\"ion-social-facebook\"></i></Link></li>\r\n          <li><Link to=\"/\"><i className=\"ion-social-twitter\"></i></Link></li>\r\n          <li><Link to=\"/\"><i className=\"ion-social-instagram\"></i></Link></li>\r\n          <li><Link to=\"/\"><i className=\"ion-social-googleplus\"></i></Link></li>\r\n          <li><Link to=\"/\"><i className=\"ion-social-tumblr\"></i></Link></li>\r\n          <li><Link to=\"/\"><i className=\"ion-social-dribbble\"></i></Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Header;","// export function pluralize(name, count) {\n//   if (count === 1) {\n//     return name\n//   }\n//   return name + 's'\n// }\n\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    // open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open('hire', 1);\n\n    // create variables to hold reference to the database, transaction (tx), and object store\n    let db, tx, store;\n\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores \n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore('jobs', { keyPath: '_id' });\n      db.createObjectStore('skills', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n      db.createObjectStore('product', { keyPath: '_id' });\n    };\n\n    // handle any errors with connecting\n    request.onerror = function (e) {\n      console.log('There was an error');\n    };\n\n    // on database open success\n    request.onsuccess = function (e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, 'readwrite');\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function (e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n      \n      // when the transaction is complete, close the connection\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n\n  });\n}","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","export const UPDATE_JOBS = \"UPDATE_JOBS\";\r\nexport const UPDATE_CURRENT_JOB = \"UPDATE_CURRENT_JOB\";\r\nexport const UPDATE_SKILLS = \"UPDATE_SKILLS\";\r\nexport const UPDATE_CURRENT_SKILL = \"UPDATE_CURRENT_SKILL\";\r\nexport const UPDATE_OFFERS = \"UPDATE_OFFERS\";\r\nexport const UPDATE_CURRENT_USER = \"UPDATE_CURRENT_USER\";\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const TOGGLE_CART = 'TOGGLE_CART';\r\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\r\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\r\nexport const UPDATE_IMAGE = 'UPDATE_IMAGE';\r\n// export const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, Redirect } from \"react-router-dom\";\r\nimport { QUERY_USER, QUERY_ME_BASIC, QUERY_PRODUCT } from \"../utils/queries\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Cart from '../components/Cart';\r\nimport Auth from '../utils/auth';\r\nimport Header from '../components/Header';\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from '../assets/spinner.gif';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  ADD_TO_CART,\r\n  UPDATE_OFFERS,\r\n  UPDATE_IMAGE,\r\n  UPDATE_PRODUCT,\r\n} from '../utils/actions';\r\nimport userImage from '../assets/images/_a67_cQQD-pexels-andrea-piacquadio-818819.jpg';\r\n\r\nconst Profile = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n\r\n  const { offers, product, cart } = state;\r\n  const { id: userParam } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n  \r\n\r\n  const { productData } = useQuery(QUERY_PRODUCT);\r\n\r\n  console.log(\"all products\", productData)\r\n  const [currentupload, setCurrentupload] = useState({});\r\n  const [userImagev2, setUserIMage] = useState({});\r\n  const { loading, data:userData } = useQuery(userParam ? QUERY_USER : QUERY_ME_BASIC, {\r\n    variables: { id: userParam }\r\n  });\r\n\r\n\r\n  const user = userData?.me || userData?.user || {};\r\n\r\n\r\n\r\n  console.log(\"user data\", user);\r\n  // const user = data?.me || data?.user || {};\r\n\r\n  // if (!user?.email) {\r\n  //   return (\r\n  //     <h4>\r\n  //       You need to be logged in to see this page. Use the navigation links above to sign up or log in!\r\n  //     </h4>\r\n  //   );\r\n  // }\r\n\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      setCurrentupload(userData.me.upload.path.split(\"/\"))\r\n      console.log(\"meconsol\", userData.me.upload.path.split(\"/\"));\r\n    }\r\n  }, [ userData, setCurrentupload ]);\r\n\r\n  \r\n\r\n  // useEffect(() => {\r\n  //   // already in global store\r\n  //   if (product.length) {\r\n  //     setCurrentProduct(product.find(item => item._id === id));\r\n  //   } \r\n  //   // retrieved from server\r\n  //   else if (productData) {\r\n  //     dispatch({\r\n  //       type: UPDATE_PRODUCT,\r\n  //       product: productData.product\r\n  //     });\r\n  \r\n  //     productData.product.forEach((item) => {\r\n  //       idbPromise('product', 'put', product);\r\n  //     });\r\n  //   }\r\n  //   // get cache from idb\r\n  //   else if (!loading) {\r\n  //     idbPromise('product', 'get').then((indexedProducts) => {\r\n  //       dispatch({\r\n  //         type: UPDATE_PRODUCT,\r\n  //         product: indexedProducts\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // }, [product, productData, loading, dispatch]);\r\n\r\n\r\n  if (Auth.loggedIn() && Auth.getProfile().data._id === userParam) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n  \r\n\r\n  // const addToCart = () => {\r\n  //   const itemInCart = cart.find((cartItem) => cartItem._id === id)\r\n  \r\n  //   if (itemInCart) {\r\n  //     dispatch({\r\n  //       type: UPDATE_CART_QUANTITY,\r\n  //       _id: id,\r\n  //       purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 0\r\n  //     });\r\n  //     // if we're updating quantity, use existing item data and increment purchaseQuantity value by one\r\n  //     idbPromise('cart', 'put', {\r\n  //       ...itemInCart,\r\n  //       purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n  //     });\r\n  //   } else {\r\n  //     dispatch({\r\n  //       type: ADD_TO_CART,\r\n  //       product: { ...currentProduct }\r\n  //     });\r\n  //     // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\r\n  //     idbPromise('cart', 'put', { ...currentProduct });\r\n  //   }\r\n  // }\r\nconsole.log(\"the currentest upload\", currentupload );\r\nconst imageforspot =  import(`../assets/images/${currentupload[5]}`).then((image) => console.log(image));\r\nconsole.log( imageforspot);\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <section style={{ margin: 0 }}>\r\n\r\n      <Header\r\n        image ={userImage}\r\n        firstName={user.firstName}\r\n        lastName={user.lastName}\r\n      ></Header>\r\n      <main id=\"main\">\r\n        <section className=\"breadcrumbs\">\r\n          <div className=\"container\">\r\n\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h2>Portfolio Details</h2>\r\n              <ol>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/\">Portfolio</Link></li>\r\n                <li>Portfolio Details</li>\r\n              </ol>\r\n            </div>\r\n\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"portfolio-details\">\r\n          <div className=\"container\">\r\n\r\n            <div className=\"portfolio-details-container\">\r\n\r\n              <div className=\"portfolio-info\">\r\n                <h3>Current Job Offers</h3>\r\n                <ul>\r\n                  {/* {offers.map(offer => ( */}\r\n                    {/* <li>{offer.role}: {offer.skill}</li> */}\r\n                  {/* ))} */}\r\n                  {/* <button onClick={addToCart}>Purchase Premium</button>\r\n                  <button\r\n                    disabled={!cart.find(p => p._id === currentProduct._id)}\r\n                    onClick={removeFromCart}\r\n                  >\r\n                    Remove from Cart\r\n            </button> */}\r\n                </ul>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"portfolio-description\">\r\n              <h2>About {user.firstName} {user.lastName}</h2>\r\n              <p>\r\n                {user.profileText}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n\r\n\r\n    </section>\r\n\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        email\n      }\n    }\n  }\n`;\n\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName:String!, $email:String!, $password: String!, $profileText: String!, $skills: [ID], $upload:ID) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password, profileText: $profileText, skills: $skills, upload: $upload) {\n      token\n      user {\n        _id\n        email\n      }\n    }\n  }\n`;\n\n\nexport const UPLOAD_MUTATION = gql`\n  mutation uploadFile($file: Upload!) {\n    uploadFile(file: $file) {\n      id\n      filename\n      mimetype\n      path\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($product: ID!) {\n    addOrder(product: $product) {\n      purchaseDate\n      product {\n        _id\n      name\n      description\n      price\n      }\n    }\n  }\n`;","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADD_USER, UPLOAD_MUTATION } from \"../utils/mutations\";\nimport { UPDATE_SKILLS, UPDATE_IMAGE } from \"../utils/actions\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_SKILLS, QUERY_IMAGE } from \"../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useDropzone } from 'react-dropzone';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Auth from \"../utils/auth\";\nimport homeimage from \"../assets/images/employeeproduct.jpg\";\n\n\nfunction Signup(props) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n\n  const [formState, setFormState] = useState({ email: '', password: '', firstName: '', lastName: '', profileText:'' });\n  const [addUser] = useMutation(ADD_USER);\n  const [file, setFile] = useState({});\n\n  \n  const [uploadFile, {data: mutationData}] = useMutation(UPLOAD_MUTATION, {\n    refetchQueries: [{query: QUERY_IMAGE}]\n  });\n\n  // const {  data:imageData } = useQuery(QUERY_IMAGE);\n  // console.log(\"images uploaded\", imageData);\n\n  if(mutationData){\n    console.log(mutationData.uploadFile.id);\n  };\n  \n\n  const handleUpload = async (event) => {\n    event.preventDefault();\n    if (file) {\n      console.log(\"filesssss\", file)\n      uploadFile({\n        variables:  {file }\n      });\n\n\n      setFile({})\n    };\n  \n    return file;\n  };\n  \n\n\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFile => {\n    setFile(\n      Object.assign(acceptedFile[0], {\n        preview: URL.createObjectURL(acceptedFile[0]),\n      })\n    );\n    console.log(\"aacepted\", acceptedFile);\n    }\n  });\n\n  const thumbs = \n    <div className='thumb' key={file.name}>\n      <div className='thumb-inner'>\n        <img src={file.preview} className='img' alt={file.length && \"img\"} />\n      </div>\n    </div>\n\n    useEffect(() => () => {\n        URL.revokeObjectURL(file.preview)\n    }, [file]);\n\n\n\n\n  const { skills } = state;\n\n  const { loading, data: skillData } = useQuery(QUERY_SKILLS);\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (skillData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_SKILLS,\n        skills: skillData.skills,\n      });\n      //   skillData.skills.forEach(skill => {\n      //     idbPromise('skills', 'put', skill);\n      //   });\n    }\n    // else if (!loading) {\n    //   idbPromise('skills', 'get').then(categories => {\n    //     dispatch({\n    //       type: UPDATE_SKILLS,\n    //       categories: categories\n    //     });\n    //   });\n    // }\n  }, [skillData, loading, dispatch]);\n\n\n\n\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n \n\n    \n\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName, \n        profileText: formState.profileText, skills: formState.skills, upload: mutationData.uploadFile.id\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  const imageDisplayed = homeimage;\n  const roleDisplayed = \"H!red\";\n\n  return (\n    <section style={{margin:0}}>\n      <Header image={imageDisplayed} role={roleDisplayed}></Header>\n    <div id=\"contact\" className=\"paddsection\">\n      <div className=\"container\">\n        <div className=\"contact-block1\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"contact-contact\">\n                <h2 className=\"mb-30\">Signup</h2>\n\n                <ul className=\"contact-details\">\n                  <li>\n                    <span>.....</span>\n                  </li>\n                  <li>\n                    <span>.....</span>\n                  </li>\n                  <li>\n                    <span>.....</span>\n                  </li>\n                  <li>\n                    <span>.....</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <form onSubmit={handleFormSubmit} className=\"php-email-form\" encType=\"multipart/form-data\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <div className=\"form-group contact-block1\">\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        id=\"firstName\"\n                        placeholder=\"First Name\"\n                        onChange={handleChange}\n                      />\n                      <div className=\"validate\"></div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6\">\n                    <div className=\"form-group contact-block1\">\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        id=\"lastName\"\n                        placeholder=\"Last Name\"\n                        onChange={handleChange}\n                      />\n                      <div className=\"validate\"></div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6\">\n                    <div className=\"form-group contact-block1\">\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        id=\"email\"\n                        placeholder=\"email\"\n                        onChange={handleChange}\n                      />\n                      <div className=\"validate\"></div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6\">\n                    <div className=\"form-group\">\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        id=\"pwd\"\n                        placeholder=\"Password\"\n                        onChange={handleChange}\n                      />\n                      <div className=\"validate\"></div>\n                    </div>\n                  </div>\n\n                  <section className='container'>\n                    <div {...getRootProps({ className: 'dropzone' })}>\n                      <input {...getInputProps()} />\n                      <p>Drag 'n' drop some file here, or click to select file</p>\n                    </div>\n                    <aside className='thumb-container'>\n                      {thumbs}\n                      <button\n                        type='submit'\n                        className={`button`}\n                        style={{ display: file && !Object.keys(file).length && 'none' }}\n                        onClick={handleUpload}\n                      >\n                        Upload\n                      </button>\n                    </aside>\n                  </section>\n                  {/* \n                  <div className=\"col-lg-12\" style={{ paddingBottom: 20 }}>\n                    <div className=\"input-group\">\n                      <div className=\"custom-file\">\n                        <input\n                          type=\"file\"\n                          className=\"custom-file-input\"\n                          name=\"profileImage\"\n                          id=\"profileImage\"\n                          placeholder=\"Please upload a profile Picture\"\n                        />\n                        <label class=\"custom-file-label\">Choose file</label>\n                        <div className=\"validate\"></div>\n                      </div>\n                    </div>\n                  </div> */}\n\n                  <div className=\"col-lg-12\" style={{ paddingBottom: 20 }}>\n                    {skills.map((skill) => (\n                      <div key={skill._id} className=\"form-check\">\n                        <input\n                          type=\"checkbox\"\n                          name=\"skills\"\n                          className=\"form-check-input\"\n                          value={skill._id}\n                          onChange={handleChange}\n                        />\n                        <label className=\"form-check-label\">{skill.name}</label>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <textarea\n                        className=\"form-control\"\n                        name=\"profileText\"\n                        rows=\"20\"\n                        id=\"profileText\"\n                        placeholder=\"Please tell us about yourself and your job experience. Include as much detail as you can.\"\n                        onChange={handleChange}\n                      ></textarea>\n                      <div className=\"validate\"></div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-defeault btn-send\"\n                      value=\"Signup\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </section>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nfunction Login() {\r\n  // const [formState, setFormState] = useState({ email: '', password: '' })\r\n  // const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const [formState, setFormState] = useState({ email: '', password: '' })\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\r\n      const token = mutationResponse.data.login.token;\r\n  \r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div id=\"contact\" className=\"paddsection\">\r\n      <div className=\"container\">\r\n        <div className=\"contact-block1\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"contact-contact\">\r\n\r\n                <h2 className=\"mb-30\">Login</h2>\r\n\r\n                <ul className=\"contact-details\">\r\n                  <li><span>.....</span></li>\r\n                  <li><span>.....</span></li>\r\n                  <li><span>.....</span></li>\r\n                  <li><span>.....</span></li>\r\n                </ul>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6\">\r\n              <form onSubmit={handleFormSubmit} className=\"php-email-form\">\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"form-group contact-block1\">\r\n                      <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder=\"email\" onChange={handleChange} />\r\n                      <div className=\"validate\"></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"form-group\">\r\n                      <input type=\"password\" className=\"form-control\" name=\"password\" id=\"pwd\" placeholder=\"Password\" onChange={handleChange} />\r\n                      <div className=\"validate\"></div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-lg-12\">\r\n                    <input type=\"submit\" className=\"btn btn-defeault btn-send\" value=\"Login\" />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react';\r\nimport { UPDATE_SKILLS, UPDATE_CURRENT_SKILL } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_SKILLS } from \"../../utils/queries\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction SkillMenu() {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state);\r\n\r\n    const { skills } = state;\r\n\r\n    const { loading, data: skillData } = useQuery(QUERY_SKILLS);\r\n\r\n    useEffect(() => {\r\n        // if categoryData exists or has changed from the response of useQuery, then run dispatch()\r\n        if (skillData) {\r\n            // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\r\n            dispatch({\r\n                type: UPDATE_SKILLS,\r\n                skills: skillData.skills\r\n            });\r\n            \r\n              skillData.skills.forEach(skill => {\r\n                idbPromise('skills', 'put', skill);\r\n              });\r\n        }\r\n        else if (!loading) {\r\n          idbPromise('skills', 'get').then(skills => {\r\n            dispatch({\r\n              type: UPDATE_SKILLS,\r\n              skills: skills\r\n            });\r\n          });\r\n        }\r\n    }, [skillData, loading, dispatch]);\r\n\r\n    const handleClick = id => {\r\n        dispatch({\r\n            type: UPDATE_CURRENT_SKILL,\r\n            currentSkill: id\r\n        });\r\n    };\r\n    return (\r\n        <ul id=\"portfolio-flters\">\r\n            <li className=\"filter-active\"></li>\r\n            {skills.map(item => (\r\n                <li key={item._id}\r\n                    onClick={() => {\r\n                    handleClick(item._id);\r\n                    }}\r\n                >\r\n                    {item.name}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SkillMenu;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst JobItem = (job) => {\r\n\r\n  const {\r\n    image,\r\n    role,\r\n    _id,\r\n    skills,\r\n  } = job;\r\n\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n\r\n  \r\n    return (\r\n\r\n      \r\n            <div className=\"col-lg-4 col-md-6 portfolio-item filter-app\">\r\n              <Link to={`/jobs/${_id}`}>\r\n              <img src={image} className=\"img-fluid\" alt=\"\" />\r\n              <div className=\"portfolio-info\">\r\n                <h4>{role}</h4>\r\n                <p>{skills.name}</p>\r\n           \r\n              </div>\r\n              </Link>\r\n            </div>\r\n      \r\n\r\n\r\n    );\r\n  };\r\n  \r\n  export default JobItem;\r\n  ","import React, { useEffect } from 'react';\r\nimport SkillMenu from '../SkillMenu';\r\nimport { UPDATE_JOBS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_JOBS_BY_SKILL} from \"../../utils/queries\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport JobItem from \"../JobItem\";\r\nimport spinner from '../../assets/spinner.gif';\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport Header from '../Header';\r\nimport homeimage from \"../../assets/images/employeeproduct.jpg\";\r\n\r\n\r\nfunction JobList()  {\r\n\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n\r\n  const { currentSkill } = state;\r\n  console.log(currentSkill);\r\n\r\n  const { loading, data} = useQuery(QUERY_JOBS_BY_SKILL);\r\n  console.log(loading);\r\n\r\n  useEffect(() => {\r\n\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_JOBS,\r\n        jobs: data.jobs\r\n      });\r\n      data.jobs.forEach((job) => {\r\n        idbPromise('jobs', 'put', job);\r\n      });\r\n    }\r\n    else if (!loading) {\r\n      // since we're offline, get all of the data from the `products` store\r\n      idbPromise('jobs', 'get').then((jobs) => {\r\n        // use retrieved data to set global state for offline browsing\r\n        dispatch({\r\n          type: UPDATE_JOBS,\r\n          jobs: jobs\r\n        });\r\n      });\r\n    }\r\n\r\n  }, [ data, loading, dispatch]);\r\n\r\n  console.log(currentSkill);\r\n\r\n\r\n  function filterJobs() {\r\n    if (!currentSkill) {\r\n      return state.jobs;\r\n    }\r\n  \r\n    return state.jobs.filter(job => job.skills._id === currentSkill);\r\n  }\r\n\r\n  const imageDisplayed = homeimage;\r\n  const roleDisplayed = \"H!red\";\r\n\r\n  return (\r\n    <section style={{margin:0}}>\r\n      <Header image={imageDisplayed} role={roleDisplayed}></Header>\r\n      <div id=\"portfolio\" className=\"paddsection\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title text-center\">\r\n          <h2>Browse Jobs</h2>\r\n        </div>\r\n      </div>\r\n\r\n      {state.jobs.length ? (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 d-flex justify-content-center\">\r\n            <SkillMenu />\r\n          </div>\r\n        </div>\r\n        <div className=\"row portfolio-container\">\r\n            {filterJobs().map(job => (\r\n              <JobItem\r\n              key = {job._id}\r\n              _id = {job._id}\r\n              image= {job.image}\r\n              role = {job.role}\r\n              skills = {job.skills}\r\n              />\r\n            ))}  \r\n            </div>\r\n            </div>\r\n      ) : (\r\n        <h3>You haven't added any jobs yet!</h3>\r\n      )}\r\n       { loading ? \r\n      <img src={spinner} alt=\"loading\" />: null}\r\n       \r\n      \r\n    </div>\r\n    </section>\r\n    \r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import React from \"react\";\r\nimport JobList from \"../components/JobList\";\r\nimport Auth from '../utils/auth';\r\nimport '../index.css';\r\n// import homeimage from \"../../assets/images/employeeproduct.jpg\";\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <main id=\"main\">\r\n      <JobList></JobList>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <div className=\"main-content paddsection\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8 col-md-offset-2\">\r\n              <div className=\"row\">\r\n                <div className=\"container-main single-main\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"block-main mb-30\">\r\n                      <img src=\"assets/img/blog-post-big.jpg\" className=\"img-responsive\" alt=\"reviews2\" />\r\n                      <div className=\"content-main single-post padDiv\">\r\n                        <div className=\"journal-txt\">\r\n                          <h4><a href=\"#\">SO LETS MAKE THE MOST IS BEAUTIFUL</a></h4>\r\n                        </div>\r\n                        <div className=\"post-meta\">\r\n                          <ul className=\"list-unstyled mb-0\">\r\n                            <li className=\"author\">by:<a href=\"#\">medsign</a></li>\r\n                            <li className=\"date\">date:<a href=\"#\">March 31, 2017</a></li>\r\n                            <li className=\"commont\"><i className=\"ion-ios-heart-outline\"></i><a href=\"#\">3 Comments</a></li>\r\n                          </ul>\r\n                        </div>\r\n                        <p className=\"mb-30\">It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to\r\n                          using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web\r\n                          sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</p>\r\n                        <p className=\"mb-30\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type\r\n                          specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\r\n                          and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n                        <blockquote>If you are still looking for that one person who will change your life, take a look in the mirror.</blockquote>\r\n                        <p className=\"mb-30\">Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classNameical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in\r\n                          Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classNameical literature, discovered the undoubtable source. Lorem Ipsum comes from sections\r\n                          1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum,\r\n                          \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"comments text-left padDiv mb-30\">\r\n                      <div className=\"entry-comments\">\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"cmt padDiv\">\r\n                      <form id=\"comment-form\" method=\"post\" action=\"\" role=\"form\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <div className=\"form-group\">\r\n                              <input id=\"form_name\" type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Name *\" required=\"required\" />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <div className=\"form-group\">\r\n                              <input id=\"form_email\" type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"email *\" required=\"required\" />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n                              <input id=\"form_name\" type=\"text\" name=\"website\" className=\"form-control\" placeholder=\"Website\" />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-12\">\r\n                            <div className=\"form-group\">\r\n                              <textarea id=\"form_message\" name=\"message\" className=\"form-control\" placeholder=\"Message *\" style={{Height: 200}} required=\"required\"></textarea>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-12\">\r\n                            <input type=\"submit\" className=\"btn btn-defeault btn-send\" value=\"Send message\" />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default About;\r\n  ","import {\r\n    UPDATE_JOBS,\r\n    UPDATE_CURRENT_JOB,\r\n    UPDATE_SKILLS,\r\n    UPDATE_CURRENT_SKILL,\r\n    UPDATE_OFFERS,\r\n    UPDATE_CURRENT_USER,\r\n    CLEAR_CART,\r\n    TOGGLE_CART,\r\n    ADD_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    UPDATE_PRODUCT,\r\n    UPDATE_CART_QUANTITY,\r\n    UPDATE_IMAGE\r\n} from './actions';\r\n\r\n\r\nconst initialState = {\r\n    jobs: [],\r\n    skills: [],\r\n    currentSkill: '',\r\n    currentJob: '',\r\n    offers: [],\r\n    cart: [],\r\n    product: [],\r\n    upload: []\r\n};\r\n\r\nexport const reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\r\n        case UPDATE_JOBS:\r\n            return {\r\n                ...state,\r\n                jobs: [...action.jobs]\r\n            };\r\n\r\n        case UPDATE_CURRENT_JOB:\r\n            return {\r\n                ...state,\r\n                currentJob: action.currentJob\r\n            };\r\n\r\n\r\n        case UPDATE_SKILLS:\r\n            return {\r\n                ...state,\r\n                skills: [...action.skills]\r\n            };\r\n\r\n        case UPDATE_CURRENT_SKILL:\r\n            return {\r\n                ...state,\r\n                currentSkill: action.currentSkill\r\n            };\r\n        case UPDATE_OFFERS:\r\n            return {\r\n                ...state,\r\n                offers: [...action.offers]\r\n            };\r\n\r\n        case UPDATE_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                cuurentUser: action.currentUser\r\n            };\r\n\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: [...state.cart, action.product]\r\n            };\r\n\r\n        case REMOVE_FROM_CART:\r\n            let newState = state.cart.filter(product => {\r\n                return product._id !== action._id;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cartOpen: newState.length > 0,\r\n                cart: newState\r\n            };\r\n\r\n        case UPDATE_CART_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: state.cart.map(product => {\r\n                    if (action._id === product._id) {\r\n                        product.purchaseQuantity = action.purchaseQuantity;\r\n                    }\r\n                    return product;\r\n                })\r\n            };\r\n\r\n        case CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: false,\r\n                cart: []\r\n            };\r\n\r\n        case TOGGLE_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: !state.cartOpen\r\n            };\r\n\r\n        case UPDATE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: [...action.product],\r\n            };\r\n\r\n        case UPDATE_IMAGE:\r\n            return {\r\n                ...state,\r\n                upload: action.upload\r\n            };\r\n\r\n\r\n\r\n\r\n        // if it's none of these actions, do not update state at all and keep things the same!\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\n\r\nexport default createStore(reducers);","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_JOBS_BY_SKILL } from \"../utils/queries\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from '../assets/spinner.gif';\r\nimport Header from '../components/Header';\r\nimport {\r\n  UPDATE_JOBS,\r\n} from '../utils/actions';\r\n\r\n\r\nconst JobDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n\r\n  const { jobs } = state;\r\n\r\n  const { id } = useParams();\r\n\r\n  const [currentJob, setCurrentJob] = useState({})\r\n\r\n  const { loading, data } = useQuery(QUERY_JOBS_BY_SKILL);\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (jobs.length) {\r\n      setCurrentJob(jobs.find(job => job._id === id));\r\n    } \r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_JOBS,\r\n        jobs: data.jobs\r\n      });\r\n\r\n    }\r\n  }, [jobs, data, loading, dispatch, id]);\r\n\r\n  // if(currentJob.skills[0]) {\r\n  //   console.log(currentJob.skills[0])\r\n  // }\r\n  console.log(currentJob)\r\n\r\n\r\n    return (\r\n      <section style={{margin:0}}>\r\n        <Header \r\n        image={currentJob.image}\r\n        role = {currentJob.role}\r\n        skill = {currentJob.skill}\r\n        ></Header>\r\n        <>\r\n      {currentJob ? (\r\n        \r\n        <main id=\"main\">\r\n\r\n        <section className=\"breadcrumbs\">\r\n          <div className=\"container\">\r\n    \r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h2>Job Details</h2>\r\n              <ol>\r\n                <li><Link to =\"/\">Home</Link></li>\r\n                <li><Link to =\"/\">User Profile</Link></li>\r\n               \r\n              </ol>\r\n            </div>\r\n    \r\n          </div>\r\n        </section>\r\n        <section className=\"portfolio-details\">\r\n          <div className=\"container\">\r\n    \r\n            <div className=\"portfolio-details-container\">\r\n  \r\n    \r\n              <div className=\"portfolio-description\">\r\n                <h3> Needed</h3>\r\n              </div>\r\n    \r\n            </div>\r\n    \r\n            <div className=\"portfolio-description\">\r\n              <h2>About Our {currentJob.role}</h2>\r\n              <p>\r\n                {currentJob.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n        \r\n      ) : null}\r\n      {\r\n        loading ? <img src={spinner} alt=\"loading\" /> : null\r\n      }\r\n      \r\n    </>\r\n      </section>\r\n    \r\n    );\r\n  };\r\n  \r\n  export default JobDetail;\r\n  ","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost-upload\";\nimport {createUploadLink} from 'apollo-upload-client';\nimport { InMemoryCache} from 'apollo-cache-inmemory';\n// import { StoreProvider } from \"./utils/GlobalState\";\nimport { Provider } from \"react-redux\";\nimport Footer from \"./components/Footer\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Success from \"./pages/Success\";\nimport Nav from \"./components/Nav\";\nimport Profile from \"./pages/Profile\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport store from \"./utils/store\";\nimport JobDetail from \"./pages/JobDetail\";\nconst httpLink = createUploadLink({\n  uri: \"graphql\",\n});\n\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem(\"id_token\");\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    });\n  },\n  cache: new InMemoryCache({\n    typePolicies: {\n      Skills: {\n        keyFields: []\n      },\n      Images: {\n        keyFields: [\"id\", \"filename\",]\n      }\n    }\n  }),\n  link: httpLink,\n  // uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={Signup} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/profile/:id?\" component={Profile} />\n                <Route exact path=\"/jobs/:id\" component={JobDetail} />\n                <Route exact path=\"/success\" component={Success} />\n                <Route component={NoMatch} />\n              </Switch>\n            <Footer />\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/employeeproduct.aa52d149.jpg\";","export default __webpack_public_path__ + \"static/media/_a67_cQQD-pexels-andrea-piacquadio-818819.14e3db0c.jpg\";"],"sourceRoot":""}